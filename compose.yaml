services:
  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    dns:
      - 8.8.8.8
    environment:
      - GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS}
      - PNS_DB_HOST=${PNS_DB_HOST}
      - PNS_DB_PORT=${PNS_DB_PORT}
      - PNS_DB_NAME=${PNS_DB_NAME}
      - PNS_DB_USER=${PNS_DB_USER}
      - PNS_DB_PASSWORD=${PNS_DB_PASSWORD}
      - RCC_DB_HOST=${RCC_DB_HOST}
      - RCC_DB_PORT=${RCC_DB_PORT}
      - RCC_DB_NAME=${RCC_DB_NAME}
      - RCC_DB_USER=${RCC_DB_USER}
      - RCC_DB_PASSWORD=${RCC_DB_PASSWORD}
      - ts_test_HOST=${ts_test_HOST}
      - ts_test_PORT=${ts_test_PORT}
      - ts_test_DB_NAME=${ts_test_DB_NAME}
      - ts_test_USER=${ts_test_USER}
      - ts_test_PASSWORD=${ts_test_PASSWORD}
      # Server Configuration
      - GF_SERVER_HTTP_ADDR=${GF_SERVER_HTTP_ADDR}
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}
      - GF_SERVER_DOMAIN=${GF_SERVER_DOMAIN}
      - GF_SERVER_SERVE_FROM_SUB_PATH=${GF_SERVER_SERVE_FROM_SUB_PATH}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_LIVE_ALLOWED_ORIGINS=${GF_LIVE_ALLOWED_ORIGINS}   
      # O-AUTH Configuration
      - GF_AUTH_GENERIC_OAUTH_ENABLED=${GF_AUTH_GENERIC_OAUTH_ENABLED}
      - GF_AUTH_GENERIC_OAUTH_NAME=${GF_AUTH_GENERIC_OAUTH_NAME}
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=${GF_AUTH_GENERIC_OAUTH_CLIENT_ID}
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET}
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=${GF_AUTH_GENERIC_OAUTH_AUTH_URL}
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=${GF_AUTH_GENERIC_OAUTH_TOKEN_URL}
      - GF_AUTH_GENERIC_OAUTH_API_URL=${GF_AUTH_GENERIC_OAUTH_API_URL}
      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=${GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP}
      - GF_AUTH_GENERIC_OAUTH_SCOPES=${GF_AUTH_GENERIC_OAUTH_SCOPES}
      - GF_AUTH_GENERIC_OAUTH_CLIENT_AUTH_METHOD=${GF_AUTH_GENERIC_OAUTH_CLIENT_AUTH_METHOD}
      - GF_AUTH_GENERIC_OAUTH_USE_PKCE=${GF_AUTH_GENERIC_OAUTH_USE_PKCE}
      - GF_AUTH_GENERIC_OAUTH_USE_REFRESH_TOKEN=${GF_AUTH_GENERIC_OAUTH_USE_REFRESH_TOKEN}
      # Optional: Attribute mapping
      - GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH=${GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH}
      - GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH=${GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH}
      - GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_PATH=${GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_PATH}
      # Optional: Role mapping
      - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=${GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH}
      - GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN=${GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN}

    volumes:
      - grafana_storage:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
      - ./grafana.ini:/etc/grafana/grafana.ini

  mcp-grafana:
    image: mcp/grafana
    container_name: mcp-grafana
    restart: unless-stopped
    command: ["-t", "streamable-http"]
    environment:
      - GRAFANA_URL=http://grafana:3000
      - GRAFANA_API_KEY=${GRAFANA_API_KEY}
    depends_on:
      - grafana
    ports:
      - "8000:8000"
    networks:
      - default

volumes:
  grafana_storage: {}

networks:
  default:
    driver: bridge
